// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Block maths 1`] = `
<div
  className="custom-html-style"
>
  <p
    className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
  >
    This is some maths:
  </p>
  <div
    dangerouslySetInnerHTML={
      Object {
        "__html": "<span class=\\"katex-display\\"><span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\" display=\\"block\\"><semantics><mrow><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>x</mi><mo>→</mo><mn>0</mn></mrow></munder><mfrac><mrow><msup><mi>e</mi><mi>x</mi></msup><mo>−</mo><mn>1</mn></mrow><mrow><mn>2</mn><mi>x</mi></mrow></mfrac><mi><mover><mo><mo><munder><mo><mo>=</mo></mo><mi mathvariant=\\"normal\\">H</mi></munder></mo></mo><mrow><mo fence=\\"true\\">[</mo><mfrac><mn>0</mn><mn>0</mn></mfrac><mo fence=\\"true\\">]</mo></mrow></mover></mi><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>x</mi><mo>→</mo><mn>0</mn></mrow></munder><mfrac><msup><mi>e</mi><mi>x</mi></msup><mn>2</mn></mfrac><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow><annotation encoding=\\"application/x-tex\\">\\\\lim_{x\\\\to 0}{\\\\frac{e^x-1}{2x}}
\\\\overset{\\\\left[\\\\frac{0}{0}\\\\right]}{\\\\underset{\\\\mathrm{H}}{=}}
\\\\lim_{x\\\\to 0}{\\\\frac{e^x}{2}}={\\\\frac{1}{2}}</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:2.3222009999999997em;vertical-align:-0.7443310000000001em;\\"></span><span class=\\"mop op-limits\\"><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.69444em;\\"><span style=\\"top:-2.382892em;margin-left:0em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mathnormal mtight\\">x</span><span class=\\"mrel mtight\\">→</span><span class=\\"mord mtight\\">0</span></span></span></span><span style=\\"top:-3em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span><span class=\\"mop\\">lim</span></span></span></span><span class=\\"vlist-s\\">​</span></span><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.717108em;\\"><span></span></span></span></span></span><span class=\\"mspace\\" style=\\"margin-right:0.16666666666666666em;\\"></span><span class=\\"mord\\"><span class=\\"mord\\"><span class=\\"mopen nulldelimiter\\"></span><span class=\\"mfrac\\"><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:1.341392em;\\"><span style=\\"top:-2.314em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span class=\\"mord\\"><span class=\\"mord\\">2</span><span class=\\"mord mathnormal\\">x</span></span></span><span style=\\"top:-3.23em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span class=\\"frac-line\\" style=\\"border-bottom-width:0.04em;\\"></span></span><span style=\\"top:-3.677em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span class=\\"mord\\"><span class=\\"mord\\"><span class=\\"mord mathnormal\\">e</span><span class=\\"msupsub\\"><span class=\\"vlist-t\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.664392em;\\"><span style=\\"top:-3.063em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mathnormal mtight\\">x</span></span></span></span></span></span></span></span><span class=\\"mspace\\" style=\\"margin-right:0.2222222222222222em;\\"></span><span class=\\"mbin\\">−</span><span class=\\"mspace\\" style=\\"margin-right:0.2222222222222222em;\\"></span><span class=\\"mord\\">1</span></span></span></span><span class=\\"vlist-s\\">​</span></span><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.686em;\\"><span></span></span></span></span></span><span class=\\"mclose nulldelimiter\\"></span></span></span><span class=\\"mord\\"><span class=\\"mop op-limits\\"><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:1.5778699999999999em;\\"><span style=\\"top:-3em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span><span class=\\"mop\\"><span class=\\"mrel\\"><span class=\\"mop op-limits\\"><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.3668699999999998em;\\"><span style=\\"top:-2.355669em;margin-left:0em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mathrm mtight\\">H</span></span></span></span><span style=\\"top:-3em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span><span class=\\"mop\\">=</span></span></span></span><span class=\\"vlist-s\\">​</span></span><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.7443310000000001em;\\"><span></span></span></span></span></span></span></span></span></span><span style=\\"top:-3.7803699999999996em;margin-left:0em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\"><span class=\\"minner mtight\\"><span class=\\"mopen sizing reset-size3 size6 mtight delimcenter\\" style=\\"top:0.07500000000000001em;\\"><span class=\\"mtight\\">[</span></span><span class=\\"mord mtight\\"><span class=\\"mopen nulldelimiter sizing reset-size3 size6\\"></span><span class=\\"mfrac\\"><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.8443142857142858em;\\"><span style=\\"top:-2.656em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span class=\\"sizing reset-size3 size1 mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mtight\\">0</span></span></span></span><span style=\\"top:-3.2255000000000003em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span class=\\"frac-line mtight\\" style=\\"border-bottom-width:0.049em;\\"></span></span><span style=\\"top:-3.384em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span class=\\"sizing reset-size3 size1 mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mtight\\">0</span></span></span></span></span><span class=\\"vlist-s\\">​</span></span><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.344em;\\"><span></span></span></span></span></span><span class=\\"mclose nulldelimiter sizing reset-size3 size6\\"></span></span><span class=\\"mclose sizing reset-size3 size6 mtight delimcenter\\" style=\\"top:0.07500000000000001em;\\"><span class=\\"mtight\\">]</span></span></span></span></span></span></span><span class=\\"vlist-s\\">​</span></span><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.7443310000000001em;\\"><span></span></span></span></span></span></span><span class=\\"mspace\\" style=\\"margin-right:0.16666666666666666em;\\"></span><span class=\\"mop op-limits\\"><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.69444em;\\"><span style=\\"top:-2.382892em;margin-left:0em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mathnormal mtight\\">x</span><span class=\\"mrel mtight\\">→</span><span class=\\"mord mtight\\">0</span></span></span></span><span style=\\"top:-3em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span><span class=\\"mop\\">lim</span></span></span></span><span class=\\"vlist-s\\">​</span></span><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.717108em;\\"><span></span></span></span></span></span><span class=\\"mspace\\" style=\\"margin-right:0.16666666666666666em;\\"></span><span class=\\"mord\\"><span class=\\"mord\\"><span class=\\"mopen nulldelimiter\\"></span><span class=\\"mfrac\\"><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:1.341392em;\\"><span style=\\"top:-2.314em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span class=\\"mord\\"><span class=\\"mord\\">2</span></span></span><span style=\\"top:-3.23em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span class=\\"frac-line\\" style=\\"border-bottom-width:0.04em;\\"></span></span><span style=\\"top:-3.677em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span class=\\"mord\\"><span class=\\"mord\\"><span class=\\"mord mathnormal\\">e</span><span class=\\"msupsub\\"><span class=\\"vlist-t\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.664392em;\\"><span style=\\"top:-3.063em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mathnormal mtight\\">x</span></span></span></span></span></span></span></span></span></span></span><span class=\\"vlist-s\\">​</span></span><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.686em;\\"><span></span></span></span></span></span><span class=\\"mclose nulldelimiter\\"></span></span></span><span class=\\"mspace\\" style=\\"margin-right:0.2777777777777778em;\\"></span><span class=\\"mrel\\">=</span><span class=\\"mspace\\" style=\\"margin-right:0.2777777777777778em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:2.00744em;vertical-align:-0.686em;\\"></span><span class=\\"mord\\"><span class=\\"mord\\"><span class=\\"mopen nulldelimiter\\"></span><span class=\\"mfrac\\"><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:1.32144em;\\"><span style=\\"top:-2.314em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span class=\\"mord\\"><span class=\\"mord\\">2</span></span></span><span style=\\"top:-3.23em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span class=\\"frac-line\\" style=\\"border-bottom-width:0.04em;\\"></span></span><span style=\\"top:-3.677em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span class=\\"mord\\"><span class=\\"mord\\">1</span></span></span></span><span class=\\"vlist-s\\">​</span></span><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.686em;\\"><span></span></span></span></span></span><span class=\\"mclose nulldelimiter\\"></span></span></span></span></span></span></span>",
      }
    }
  />
</div>
`;

exports[`Empty code block 1`] = `
<div
  className="custom-html-style"
/>
`;

exports[`Inline maths 1`] = `
<div
  className="custom-html-style"
>
  <p
    className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
  >
    This is some inline maths: 
    <span
      dangerouslySetInnerHTML={
        Object {
          "__html": "",
        }
      }
    />
  </p>
</div>
`;

exports[`Python syntax highlighting 1`] = `
<div
  className="custom-html-style"
>
  <pre
    style={
      Object {
        "MozHyphens": "none",
        "MozTabSize": "4",
        "OTabSize": "4",
        "WebkitHyphens": "none",
        "background": "#f5f2f0",
        "color": "black",
        "fontFamily": "Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
        "fontSize": "1em",
        "hyphens": "none",
        "lineHeight": "1.5",
        "margin": ".5em 0",
        "msHyphens": "none",
        "overflow": "auto",
        "padding": "1em",
        "tabSize": "4",
        "textAlign": "left",
        "textShadow": "0 1px white",
        "whiteSpace": "pre",
        "wordBreak": "normal",
        "wordSpacing": "normal",
        "wordWrap": "normal",
      }
    }
  >
    <code
      className="language-python"
      style={
        Object {
          "MozHyphens": "none",
          "MozTabSize": "4",
          "OTabSize": "4",
          "WebkitHyphens": "none",
          "background": "none",
          "color": "black",
          "fontFamily": "Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
          "fontSize": "1em",
          "hyphens": "none",
          "lineHeight": "1.5",
          "msHyphens": "none",
          "tabSize": "4",
          "textAlign": "left",
          "textShadow": "0 1px white",
          "whiteSpace": "pre",
          "wordBreak": "normal",
          "wordSpacing": "normal",
          "wordWrap": "normal",
        }
      }
    >
      <span
        className="token"
        style={
          Object {
            "color": "#07a",
          }
        }
      >
        import
      </span>
      <span
        style={Object {}}
      >
         something

      </span>
      

      <span
        style={Object {}}
      >
        
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#07a",
          }
        }
      >
        def
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#DD4A68",
          }
        }
      >
        foo
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        (
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        )
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        :
      </span>
      <span
        style={Object {}}
      >
        

      </span>
      <span
        style={Object {}}
      >
          someting
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        .
      </span>
      <span
        style={Object {}}
      >
        bar
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        (
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        )
      </span>
      <span
        style={Object {}}
      >
        

      </span>
      

      <span
        style={Object {}}
      >
        foo
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        (
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        )
      </span>
    </code>
  </pre>
</div>
`;

exports[`Standard markdown 1`] = `
<div
  className="custom-html-style"
>
  <h1
    className="MuiTypography-root MuiTypography-h1 MuiTypography-colorTextPrimary"
  >
    This is a title
  </h1>
  <p
    className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
  >
    Here is some 
    <strong>
      bold text
    </strong>
    .
  </p>
  <p
    className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
  >
    <em>
      Italics
    </em>
  </p>
</div>
`;

exports[`Standard text 1`] = `
<div
  className="custom-html-style"
>
  <p
    className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextPrimary"
  >
    Foo Bar
  </p>
</div>
`;

exports[`TypeScript syntax highlighting 1`] = `
<div
  className="custom-html-style"
>
  <pre
    style={
      Object {
        "MozHyphens": "none",
        "MozTabSize": "4",
        "OTabSize": "4",
        "WebkitHyphens": "none",
        "background": "#f5f2f0",
        "color": "black",
        "fontFamily": "Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
        "fontSize": "1em",
        "hyphens": "none",
        "lineHeight": "1.5",
        "margin": ".5em 0",
        "msHyphens": "none",
        "overflow": "auto",
        "padding": "1em",
        "tabSize": "4",
        "textAlign": "left",
        "textShadow": "0 1px white",
        "whiteSpace": "pre",
        "wordBreak": "normal",
        "wordSpacing": "normal",
        "wordWrap": "normal",
      }
    }
  >
    <code
      className="language-typescript"
      style={
        Object {
          "MozHyphens": "none",
          "MozTabSize": "4",
          "OTabSize": "4",
          "WebkitHyphens": "none",
          "background": "none",
          "color": "black",
          "fontFamily": "Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
          "fontSize": "1em",
          "hyphens": "none",
          "lineHeight": "1.5",
          "msHyphens": "none",
          "tabSize": "4",
          "textAlign": "left",
          "textShadow": "0 1px white",
          "whiteSpace": "pre",
          "wordBreak": "normal",
          "wordSpacing": "normal",
          "wordWrap": "normal",
        }
      }
    >
      <span
        className="token"
        style={
          Object {
            "color": "#07a",
          }
        }
      >
        import
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        className="token imports"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        {
      </span>
      <span
        className="token imports"
        style={Object {}}
      >
         foo 
      </span>
      <span
        className="token imports"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        }
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#07a",
          }
        }
      >
        from
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#690",
          }
        }
      >
        "bar"
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        ;
      </span>
      <span
        style={Object {}}
      >
        

      </span>
      

      <span
        style={Object {}}
      >
        
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#07a",
          }
        }
      >
        const
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        className="token function-variable"
        style={
          Object {
            "color": "#DD4A68",
          }
        }
      >
        baz
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        className="token"
        style={
          Object {
            "background": "hsla(0, 0%, 100%, .5)",
            "color": "#9a6e3a",
          }
        }
      >
        =
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        (
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        )
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        className="token arrow"
        style={
          Object {
            "background": "hsla(0, 0%, 100%, .5)",
            "color": "#9a6e3a",
          }
        }
      >
        =&gt;
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        {
      </span>
      <span
        style={Object {}}
      >
         foo
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        .
      </span>
      <span
        className="token method property-access"
        style={
          Object {
            "color": "#DD4A68",
          }
        }
      >
        use
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        (
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        )
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        }
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        ;
      </span>
      <span
        style={Object {}}
      >
        

      </span>
      

      <span
        style={Object {}}
      >
        
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#07a",
          }
        }
      >
        for
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        (
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#07a",
          }
        }
      >
        let
      </span>
      <span
        style={Object {}}
      >
         i 
      </span>
      <span
        className="token"
        style={
          Object {
            "background": "hsla(0, 0%, 100%, .5)",
            "color": "#9a6e3a",
          }
        }
      >
        =
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#905",
          }
        }
      >
        0
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        ;
      </span>
      <span
        style={Object {}}
      >
         i 
      </span>
      <span
        className="token"
        style={
          Object {
            "background": "hsla(0, 0%, 100%, .5)",
            "color": "#9a6e3a",
          }
        }
      >
        &lt;
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#905",
          }
        }
      >
        10
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        ;
      </span>
      <span
        style={Object {}}
      >
         i
      </span>
      <span
        className="token"
        style={
          Object {
            "background": "hsla(0, 0%, 100%, .5)",
            "color": "#9a6e3a",
          }
        }
      >
        ++
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        )
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        {
      </span>
      <span
        style={Object {}}
      >
        

      </span>
      <span
        style={Object {}}
      >
          
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#DD4A68",
          }
        }
      >
        baz
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        (
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        )
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        ;
      </span>
      <span
        style={Object {}}
      >
        

      </span>
      <span
        style={Object {}}
      >
        
      </span>
      <span
        className="token"
        style={
          Object {
            "color": "#999",
          }
        }
      >
        }
      </span>
    </code>
  </pre>
</div>
`;
