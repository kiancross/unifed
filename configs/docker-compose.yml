#
# CS3099 Group A3
#

version: "3"

services:
  mongo:
    image: mongo:4
    restart: unless-stopped
    networks:
      - internal-network
      - federation-network
      - inspect-network
    volumes:
      - mongo_data:/data/db
      - "./configs/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_ADMIN_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_ADMIN_PASSWORD}"

  proxy:
    image: nginx:stable-alpine
    restart: unless-stopped
    networks:
      - internal-network
      - federation-network
      - frontend-network
    depends_on:
      - backend-internal
      - backend-federation
      - frontend
    volumes:
      - "./configs/nginx.dev.conf:/etc/nginx/nginx.conf:ro"
    ports:
      - "${BACKEND_PORT}:80"

  backend-internal:
    build:
      context: "."
      dockerfile: configs/backend-internal.dockerfile
    restart: unless-stopped
    networks:
      - internal-network
    depends_on:
      - mongo
    volumes:
      - "./packages/shared/src:/usr/src/unifed/packages/shared/src:ro"
      - "./packages/backend-core/src:/usr/src/unifed/packages/backend-core/src:ro"
      - "./packages/backend-federation-client/src:/usr/src/unifed/packages/backend-federation-client/src:ro"
      - "./packages/backend-internal-server/src:/usr/src/unifed/packages/backend-internal-server/src:ro"
    environment:
      UNIFED_SMTP_USERNAME: "${SMTP_USERNAME}"
      UNIFED_SMTP_PASSWORD: "${SMTP_PASSWORD}"
      UNIFED_SMTP_HOST: "${SMTP_HOST}"
      UNIFED_SMTP_PORT: "${SMTP_PORT}"
      UNIFED_MONGO_HOSTNAME: mongo
      UNIFED_MONGO_PORT: '27017'
      UNIFED_MONGO_DATABASE: unifed-internal
      UNIFED_MONGO_USERNAME: user
      UNIFED_MONGO_PASSWORD: pass
      UNIFED_JWT_SECRET: "${JWT_SECRET}"
      UNIFED_SITE_HOST: "${SITE_HOST}"
      UNIFED_SITE_PROTOCOL: "${SITE_PROTOCOL}"
      UNIFED_APPLICATION_NAME: "${APPLICATION_NAME}"
      UNIFED_SERVER_PORT: 7080
      UNIFED_LOGGING_LEVEL: "${LOGGING_LEVEL}"
      NODE_ENV: "${NODE_ENV}"
  
  backend-federation:
    build:
      context: "."
      dockerfile: configs/backend-federation.dockerfile
    restart: unless-stopped
    networks:
      - federation-network
    depends_on:
      - mongo
    volumes:
      - "./packages/shared/src:/usr/src/unifed/packages/shared/src:ro"
      - "./packages/backend-core/src:/usr/src/unifed/packages/backend-core/src:ro"
      - "./packages/backend-federation-server/src:/usr/src/unifed/packages/backend-federation-server/src:ro"
    environment:
      UNIFED_MONGO_HOSTNAME: mongo
      UNIFED_MONGO_PORT: '27017'
      UNIFED_MONGO_DATABASE: unifed-federation
      UNIFED_MONGO_USERNAME: user
      UNIFED_MONGO_PASSWORD: pass
      UNIFED_SITE_HOST: "${SITE_HOST}"
      UNIFED_SITE_PROTOCOL: "${SITE_PROTOCOL}"
      UNIFED_APPLICATION_NAME: "${APPLICATION_NAME}"
      UNIFED_SERVER_PORT: 7081
      UNIFED_LOGGING_LEVEL: "${LOGGING_LEVEL}"
      NODE_ENV: "${NODE_ENV}"

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    networks:
      - inspect-network
    ports:
      - "${MONGO_INSPECT_PORT}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "${MONGO_ADMIN_USERNAME}"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${MONGO_ADMIN_PASSWORD}"
      ME_CONFIG_BASICAUTH_USERNAME: "${MONGO_INSPECT_USERNAME}"
      ME_CONFIG_BASICAUTH_PASSWORD: "${MONGO_INSPECT_PASSWORD}"
      ME_CONFIG_MONGODB_SERVER: mongo

  frontend:
    build:
      context: "."
      dockerfile: configs/frontend.dockerfile
    restart: unless-stopped
    networks:
      - frontend-network
    volumes:
      - "./packages/shared/src:/usr/src/unifed/packages/shared/src:ro"
      - "./packages/frontend/src:/usr/src/unifed/packages/frontend/src:ro"
    environment:
      REACT_APP_INTERNAL_GRAPHQL_ENDPOINT: "${SITE_PROTOCOL}://${SITE_HOST}/internal"

networks:
  internal-network:
    driver: bridge
  federation-network:
    driver: bridge
  inspect-network:
    driver: bridge
  frontend-network:
    driver: bridge
 
volumes:
  mongo_data: {}
