name: Continuous Integration

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build (@unifed/${{ matrix.package }})
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        package:
          - frontend
          - shared
          - backend-core
          - backend-testing
          - backend-ml
          - backend-federation-client
          - backend-federation-server
          - backend-internal-server

    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 12

      - id: yarn-paths
        run: |
          echo "::set-output name=cache::$(yarn config get cacheFolder)"
          echo "::set-output name=install::$(yarn config get installStatePath)"
          echo "::set-output name=build::$(yarn config get bstatePath)"
          echo "::set-output name=unplugged::$(yarn config get pnpUnpluggedFolder)"

      - uses: actions/cache@v2.1.6
        id: cache
        with:
          path: |
            ${{ steps.yarn-paths.outputs.cache }}
            ${{ steps.yarn-paths.outputs.install }}
            ${{ steps.yarn-paths.outputs.build }}
            ${{ steps.yarn-paths.outputs.unplugged }}
            .pnp.cjs
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: npm install -g yarn

      - name: Install Dependencies 🏗️
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build ⛏️
        run: yarn workspace @unifed/${{ matrix.package }} build

      - name: Save Build 💾
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.package }}-build
          path: packages/**/build


  test:
    name: Test (@unifed/${{ matrix.package }})
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        package:
          - frontend
          - shared
          - backend-core
          - backend-ml
          - backend-federation-client
          - backend-federation-server
          - backend-internal-server

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 2

      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 12

      - id: yarn-paths
        run: |
          echo "::set-output name=cache::$(yarn config get cacheFolder)"
          echo "::set-output name=install::$(yarn config get installStatePath)"
          echo "::set-output name=build::$(yarn config get bstatePath)"
          echo "::set-output name=unplugged::$(yarn config get pnpUnpluggedFolder)"

      - uses: actions/cache@v2.1.6
        id: cache
        with:
          path: |
            ${{ steps.yarn-paths.outputs.cache }}
            ${{ steps.yarn-paths.outputs.install }}
            ${{ steps.yarn-paths.outputs.build }}
            ${{ steps.yarn-paths.outputs.unplugged }}
            .pnp.cjs
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/cache@v2.1.6
        id: mongo-cache
        with:
          path: ~/.cache/mongodb-binaries
          key: ${{ runner.os }}-mongodb

      - run: npm install -g yarn

      - name: Install Dependencies 🏗️
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Download Build 📥
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.package }}-build
          path: packages

      - name: Test 📝
        run: yarn workspace @unifed/${{ matrix.package }} test
      
      - name: Upload Coverage Report 📊
        uses: codecov/codecov-action@v1.5.2
        with:
          flags: ${{ matrix.package }}
          directory: packages/${{ matrix.package }}
          fail_ci_if_error: true

  
  graphql-schema:
    name: Generate GraphQL Schema
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 12

      - id: yarn-paths
        run: |
          echo "::set-output name=cache::$(yarn config get cacheFolder)"
          echo "::set-output name=install::$(yarn config get installStatePath)"
          echo "::set-output name=build::$(yarn config get bstatePath)"
          echo "::set-output name=unplugged::$(yarn config get pnpUnpluggedFolder)"

      - uses: actions/cache@v2.1.6
        id: cache
        with:
          path: |
            ${{ steps.yarn-paths.outputs.cache }}
            ${{ steps.yarn-paths.outputs.install }}
            ${{ steps.yarn-paths.outputs.build }}
            ${{ steps.yarn-paths.outputs.unplugged }}
            .pnp.cjs
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: npm install -g yarn

      - name: Install Dependencies 🏗️
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Download Build 📥
        uses: actions/download-artifact@v2
        with:
          name: backend-internal-server-build
          path: packages
      
      - name: Generate GraphQL Schema ⚙️
        run: |
          yarn workspace @unifed/backend-internal-server ts-node scripts/generate-schema.ts
          cp packages/backend-internal-server/.schema.graphql schema.graphql
      
      - name: Save GraphQL Schema 💾
        uses: actions/upload-artifact@v2
        with:
          name: graphql-schema
          path: schema.graphql


  code-style:
    name: Check Code Style (@unifed/${{ matrix.package }})
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: graphql-schema
    strategy:
      fail-fast: false
      matrix:
        package:
          - frontend
          - shared
          - backend-core
          - backend-testing
          - backend-ml
          - backend-federation-client
          - backend-federation-server
          - backend-internal-server

    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 12

      - id: yarn-paths
        run: |
          echo "::set-output name=cache::$(yarn config get cacheFolder)"
          echo "::set-output name=install::$(yarn config get installStatePath)"
          echo "::set-output name=build::$(yarn config get bstatePath)"
          echo "::set-output name=unplugged::$(yarn config get pnpUnpluggedFolder)"

      - uses: actions/cache@v2.1.6
        id: cache
        with:
          path: |
            ${{ steps.yarn-paths.outputs.cache }}
            ${{ steps.yarn-paths.outputs.install }}
            ${{ steps.yarn-paths.outputs.build }}
            ${{ steps.yarn-paths.outputs.unplugged }}
            .pnp.cjs
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: npm install -g yarn

      - name: Install Dependencies 🏗️
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      
      - name: Download Build 📥
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.package }}-build
          path: packages
      
      - name: Download GraphQL Schema 📥
        uses: actions/download-artifact@v2
        if: matrix.package == 'frontend'
        with:
          name: graphql-schema

      - if: matrix.package == 'frontend'
        run: mv schema.graphql packages/frontend/.schema.graphql
      
      - name: Code Style 👠
        run: yarn workspace @unifed/${{ matrix.package }} lint


  developer-documentation:
    name: Generate Developer Documentation
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 12

      - id: yarn-paths
        run: |
          echo "::set-output name=cache::$(yarn config get cacheFolder)"
          echo "::set-output name=install::$(yarn config get installStatePath)"
          echo "::set-output name=build::$(yarn config get bstatePath)"
          echo "::set-output name=unplugged::$(yarn config get pnpUnpluggedFolder)"

      - uses: actions/cache@v2.1.6
        id: cache
        with:
          path: |
            ${{ steps.yarn-paths.outputs.cache }}
            ${{ steps.yarn-paths.outputs.install }}
            ${{ steps.yarn-paths.outputs.build }}
            ${{ steps.yarn-paths.outputs.unplugged }}
            .pnp.cjs
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: npm install -g yarn

      - name: Install Dependencies 🏗️
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      
      - name: Download Build 📥
        uses: actions/download-artifact@v2
        with:
          path: builds

      - run: rsync -a builds/*-build/ packages

      - name: Generate Documentation 🔧
        run: yarn dev-docs
      
      - name: Save Documentation 💾
        uses: actions/upload-artifact@v2
        with:
          name: developer-documentation
          path: docs/developers
  

  user-manual:
    name: Generate User Manual
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v2.3.4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          working-directory: docs
          bundler-cache: true

      - name: Generate Documentation 🔧
        run: |
          cd docs
          bundle exec jekyll build

      - name: Save User Manual 💾
        uses: actions/upload-artifact@v2
        with:
          name: user-manual
          path: docs/_site
 

  deploy-pages:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    timeout-minutes: 15
    needs:
      - user-manual
      - developer-documentation

    steps:
      - uses: actions/checkout@v2.3.4
      
      - name: Download Developer Documentation 📥
        uses: actions/download-artifact@v2
        with:
          name: developer-documentation
          path: docs/developers

      - name: Deploy Documentation 🚀
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          enable_jekyll: true
          publish_branch: gh-pages
          publish_dir: docs
