#!/usr/bin/env node
/*
 * CS3099 Group A3
 */

const fs = require("fs");

function replacePathPrefix(value, newPath) {

  const matcher = /^(?:.*\/(packages\/(?:backend|frontend|shared)\/.+))$/
  const matches = value.match(matcher);

  if (matches) {
    return `${newPath}/${matches[1]}`;

  } else {
    return value;
  }
}

function replacePathPrefixObj(value, newPath) {

  if (typeof value === "string") {

    return replacePathPrefix(value, newPath);

  } else if (Array.isArray(value)) {

    const newArray = [];

    for (var i = 0; i < value.length; i++) {
      newArray.push(replacePathPrefixObj(value[i], newPath));
    }

    return newArray;

  } else if (typeof value === "object") {

    const newTree = {};

    for (const k in value) {
      const v = value[k];
      const nk = replacePathPrefixObj(k, newPath);
      const nv = replacePathPrefixObj(v, newPath);

      newTree[nk] = nv;
    }

    return newTree;
  }

  return value;
}

function getStdinJson() {
  var stdinBuffer = fs.readFileSync(0);
  return JSON.parse(stdinBuffer.toString());
}

const coverage = getStdinJson();
const replaced = replacePathPrefixObj(coverage, process.argv[2]);

console.log(JSON.stringify(replaced, null, 2));
